apiVersion: v1
kind: Pod
metadata:
  name: ${POD_NAME}
  labels:
    app: ais
    type: aisproxy
spec:
  hostNetwork: true
  containers:
  - name: aisnode
    image: ${DOCKER_IMAGE}
    imagePullPolicy: Always
    livenessProbe:
      httpGet:
        path: /v1/health
        port: ${PORT}
      initialDelaySeconds: 60
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /v1/health?readiness=true # Don't require the whole cluster to be ready
        port: ${PORT}
      initialDelaySeconds: 20
      failureThreshold: 5
      periodSeconds: 10
    env:
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: AIS_NODE_ROLE
        value: "proxy"
      - name: AIS_IS_PRIMARY
        value: "${AIS_IS_PRIMARY}"
    volumeMounts:
     - name: aws-credentials
       mountPath: /root/.aws/
     - name: ais-log
       mountPath: /tmp/
    ports:
      - containerPort: ${PORT}
    command: ["bash","-c"]
    args:
      - export PORT=${PORT} &&
        export HOSTNAME_LIST=${HOSTNAME_LIST} &&
        export AIS_PRIMARY_URL=${AIS_PRIMARY_URL} &&
        export AIS_BACKEND_PROVIDERS="${AIS_BACKEND_PROVIDERS}" &&
        export AIS_CONF_FILE=/etc/ais/ais.json &&
        export AIS_LOCAL_CONF_FILE=/etc/ais/ais_local.json &&
        export STATSD_CONF_FILE="/etc/ais/statsd.conf" &&
        export COLLECTD_CONF_FILE="/etc/ais/collectd.conf" &&
        source /etc/ais/aisnode_config.sh &&
        aisnode -config=/etc/ais/ais.json -local_config=/etc/ais/ais_local.json -role=proxy -ntargets=${TARGET_CNT} -stderrthreshold=1;
  volumes:
    - name: collectd-config
      configMap:
        name: collectd-config
    - name: statsd-config
      configMap:
        name: statsd-config
    - name: aws-credentials
      secret:
        secretName: aws-credentials
        optional: true
    - name: ais-log
      hostPath:
        path: /tmp
        type: Directory
